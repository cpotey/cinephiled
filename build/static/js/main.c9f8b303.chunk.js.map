{"version":3,"sources":["assets/svg/left.svg","assets/svg/placeholder.jpg","assets/svg/right.svg","assets/svg/search.svg","actions/history.js","components/SearchForm.js","components/SiteHeader.js","components/Footer.js","actions/api.js","actions/index.js","containers/Movie.js","components/MovieTile.js","components/Pagination.js","components/MoviesList.js","containers/Search.js","containers/Discover.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createBrowserHistory","SearchForm","_useState","useState","_useState2","Object","slicedToArray","input","setInput","onFormSubmit","e","preventDefault","length","window","location","href","concat","process","react_default","a","createElement","onSubmit","onChange","target","value","id","type","placeholder","autoComplete","className","onClick","alt","src","SearchIcon","SiteHeader","react_router_dom","to","components_SearchForm","Footer","rel","axios","create","baseURL","params","api_key","getMovie","query","_this","this","API","get","then","response","setState","activeMovie","data","catch","error","console","log","discoverMovies","page","_this3","searchResults","Button","styled","_templateObject","Movie","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","movieID","props","match","state","bind","assertThisInitialized","poster_path","title","movie","MovieWrapper","div","_templateObject2","backdrop_path","Container","_templateObject3","MoviePosterContainer","_templateObject4","MovieDetailsContainer","_templateObject5","MovieTitle","h1","_templateObject6","MovieSubtitle","h3","_templateObject7","AdditionalInfo","_templateObject8","GenreWrapper","_templateObject9","Overview","_templateObject10","history","action","goBack","LeftSVG","renderBack","Placeholder","tagline","n","hours","rhours","Math","floor","minutes","rminutes","round","hoursConvert","runtime","fullDate","_fullDate$split","split","_fullDate$split2","yearNum","monthNum","dayNum","FullDate","Date","monthNumber","getMonth","splitDate","release_date","overview","budget","revenue","budgetCSV","parseInt","toLocaleString","revenueCSV","profit","genres","map","key","name","displayGenres","homepage","imdb_id","React","Component","MovieTile","movieData","pathname","button","Pagination_templateObject","PaginationWrapper","Pagination_templateObject2","Pagination","_ref","fullResult","scrollToMyRef","total_pages","Pagination_Button","RightSVG","icon","MoviesList","movieResults","results","searchQuery","components_MovieTile","components_Pagination","scrollTo","top","Element","current","offsetTop","behavior","Search","search","URLSearchParams","searchMovies","_this2","components_MoviesList","Discover","App","react_router","components_SiteHeader","path","exact","render","from","component","components_Footer","Boolean","hostname","ReactDOM","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9f8b303.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left.5434740c.svg\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.26d52820.jpg\";","module.exports = __webpack_public_path__ + \"static/media/right.11ea5efb.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.a87eca9e.svg\";","// Our own history object so we can redirect on action creators\n// We use normal router because of this and pass it our history object\n// import createHistory from 'history/createBrowserHistory';\n// import { createHistory } from 'history';\n\nimport { createBrowserHistory } from 'history'\n\n// import(\"history\").createBrowserHistory\n\nexport default createBrowserHistory();","import React, { useState } from 'react';\n// import history from '../actions/history';\n\n\nimport SearchIcon from '../assets/svg/search.svg';\n\n  const SearchForm = () => {\n  \n  const [input, setInput] = useState('');\n\n  function onFormSubmit(e) {\n    e.preventDefault();\n    if (input.length === 0) {\n      return;\n    }\n    setInput('');\n\n\n    // console.log(this)\n\n    // this.setState({\n    //     searchQuery: {input}\n    // })\n    \n    window.location.href = `${process.env.PUBLIC_URL}/search/${input}`;\n    // history.push(`${process.env.PUBLIC_URL}/search/${input}`);\n  }\n\n \n  \n    return (\n     \n      <form onSubmit={onFormSubmit}>\n        <input\n          onChange={e => setInput(e.target.value)}\n          id=\"searchInput\"\n          type=\"text\"\n          placeholder=\"Search for a movie...\"\n          value={input}\n          autoComplete=\"off\"\n        />\n        {/* <input type=\"submit\" value=\"Submit\" /> */}\n        <button className=\"searchIcon\" type=\"submit\" onClick={onFormSubmit}><img alt=\"Search\" src={SearchIcon} /></button>\n      </form>\n\n\n    );\n}\n  \nexport default SearchForm;","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport SearchForm from './SearchForm'\n\nconst SiteHeader = () => {\n\n\n\n\n\nreturn (\n\n    <header id=\"header\">\n        <Link id=\"logo\" to={process.env.PUBLIC_URL + '/'}>cine<span>philed</span></Link>\n        {/* <div id=\"currentPage\"><h1>Discover: <span>Thor</span></h1></div> */}\n        <SearchForm />\n    </header>\n\n);\n\n\n}\n\nexport default SiteHeader\n","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n\n        <footer id=\"footer\">\n            <h4>Built by <a href=\"https://connorpote.co.uk\" target=\"_blank\" rel=\"noopener noreferrer\">Connor Pote</a></h4>\n        </footer>\n\n    );\n\n}\n\nexport default Footer","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_API\n  },\n});","import API from './api';\nimport React from 'react';\n\n// import history from '../actions/history';\n\nexport const getMovie = function getMovie(query) {\n\n    API.get(`/movie/${query}`)\n    .then(response => {\n        this.setState({\n            activeMovie: response.data\n        })\n    })\n    .catch(error => {\n        console.log(error);\n        return (\n            <div id=\"error\">\n                <p>test</p>\n            </div>\n        )\n    });\n\n};\n\n\n// export function searchMovies(query,page) {\n\n//     console.log('do function')\n\n//     API.get(`/search/movie`, {\n//         params: {\n//             query:query,\n//             page: page,\n//         },\n//     })\n//     .then(response => {\n\n//         // this.setState({\n//         //     searchResults: response.data\n//         // })\n//         console.log(`new search completed for '${query}'`)\n//         return response.data;\n        \n        \n//     })\n//     .catch(error => {\n//         console.log(error); \n//     });\n\n\n// };\n\nexport function searchMovies(query,page) {\n  \n    return API\n        .get(`/search/movie`, {\n            params: {\n                query:query,\n                page: page,\n            },\n        })\n        .then(response => {\n            this.setState({\n                searchResults: response.data\n            })\n            return response.data;\n        })\n        .catch(error => {\n            console.error(error);\n        });\n}\n\nexport const discoverMovies = function discoverMovies(query,page) {\n\n    API.get(`/discover/movie`, {\n        params: {\n            query:query,\n            page: page,\n        },\n    })\n    .then(response => {\n\n        this.setState({\n            searchResults: response.data\n        })\n        \n    })\n    .catch(error => {\n        console.log(error);\n    });\n\n};\n\n","import React from 'react';\nimport { getMovie } from '../actions/index';\n\nimport history from '../actions/history';\nimport styled from 'styled-components';\n\nimport LeftSVG from '../assets/svg/left.svg';\nimport Placeholder from '../assets/svg/placeholder.jpg';\n\nconst Button = styled.a`\n// background-color: #1b1b1b;\n// color: #fff;\nborder-radius: 100px;\npadding: 4px;\nfont-size: 0.8rem;\nmargin-right: 0.3rem;\npadding: 5px 10px;\ntext-decoration: none;\nborder: 1px solid #1b1b1b;\ncolor: #1b1b1b;\ntransition:.4s ease;\n\n&:hover {\n    background-color: #1b1b1b;\n    color: #fff;\n}\n`;\n\n\n\nclass Movie extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            activeMovie: []\n        }\n        this.getMovie = getMovie.bind(this);\n    }\n\n    componentDidMount = () => {\n        const movieID = this.props.match.params.id\n        this.getMovie(movieID)\n    }\n\n   \n    \n\n    render() {\n\n        const movie = this.state.activeMovie\n        // console.log(movie)\n        \n        const MovieWrapper = styled.div`\n            width: 100%;\n            height: 100%;\n            min-height: 92.5vh;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            background-image: radial-gradient(circle at 20% 50%,rgba(255, 255, 255, 0.98) 0%,rgba(255, 255, 255, 0.8) 100%);\n\n            &:before {\n                content: '';\n                position: absolute;\n                left: 0;\n                right: 0;\n                width: 100%;\n                height: 100%;\n                z-index: -1;\n                display: block;\n                // filter: opacity(0) grayscale(100%) contrast(130%);\n                filter: opacity(100) grayscale(100%) contrast(130%);\n                background-size: cover;\n                background-repeat: no-repeat;\n                background-position: 50% 50%;\n                background-image: url('https://image.tmdb.org/t/p/original/${movie.backdrop_path}');\n                will-change: opacity;\n                transition: filter 1s;\n            }\n           \n        `;\n\n        const Container = styled.div`\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 100%;\n            max-width: 1000px;\n            margin: 0 auto;\n\n            @media (max-width:1000px) {\n                max-width: 90%;\n            }\n            @media (max-width:750px) {\n                flex-direction: column;\n            }\n            \n\n            &.return {\n                position: absolute;\n                left: 32px;\n                max-width: 150px;\n\n                #back {\n                    cursor: pointer;\n                }\n\n                @media (max-width: 1300px) {\n                    display:none;\n                }\n            }\n        `;\n\n        const MoviePosterContainer = styled.div`\n            width: 100%;\n            max-width: 40%;\n            flex-basis: 40%;\n            align-items: center;\n            justify-content: center;\n            display: flex;\n\n            @media (max-width:750px) {\n                // max-width: 100%;\n                max-width: 45%;\n                flex-basis: 100%;\n                padding:2rem 0 0;\n            }\n            @media (max-width:500px) {\n                max-width: 80%;\n                flex-basis: 100%;\n            }\n\n            img {\n                max-height: 100%;\n                height: auto;\n                object-fit: cover;\n                max-width: 100%;\n                box-shadow: 0rem 2rem 5rem rgba(0,0,0,0.25);\n                border-radius: 0.8rem;\n            }\n        `;\n\n        const MovieDetailsContainer = styled.div`\n            width: 100%;\n            max-width: 60%;\n            \n            // padding-top: 4rem;\n            // flex-grow: 1;\n            // flex-shrink: 1;\n            flex-basis: 60%;\n            // padding: 3rem;\n            padding-left:3rem;\n\n            @media (max-width:750px) {\n                max-width: 100%;\n                flex-basis: 100%;\n                padding:2rem 0;\n            }\n\n        `;\n\n        const MovieTitle = styled.h1`\n            font-size: 2.5rem;\n            margin-top: 0;\n            margin-bottom: 0;\n        `;\n\n        const MovieSubtitle = styled.h3`\n            color:#ff6f80;\n            margin-top:0.6rem;\n        `;\n\n        const AdditionalInfo = styled.div`\n            h4 {\n                // color:#1b1b1b8f;\n            }\n            .budget {\n                margin-bottom:0;\n            }\n            .revenue {\n                margin-top:0.5rem;\n\n                &.profit span {\n                    color:#3dc018;\n\n                }\n                &.loss span {\n                    color:red;\n                }\n            }\n        `;\n\n        const GenreWrapper = styled.div`\n            display: flex;\n            -webkit-box-align: center;\n            align-items: center;\n            margin-bottom: 3rem;\n            flex-wrap: wrap;\n\n            .item {\n                background-color: #1b1b1b;\n                color: #fff;\n                border-radius: 100px;\n                padding: 4px;\n                font-size: 0.8rem;\n                margin-right: 0.3rem;\n                padding: 5px 10px;\n                margin-bottom: 0.5rem;\n\n                &:last-of-type {\n                    margin-right:0;\n                }\n            }\n        `;\n\n        const Overview = styled.div`\n\n\n            h3 {\n                margin-bottom:0rem;\n            }\n            p {\n                margin-top:0.5rem;\n            }\n        `;\n\n       \n\n        return (\n\n            <MovieWrapper>\n\n                <Container className='return'>{renderBack()}</Container>\n                <Container>\n\n                    <MoviePosterContainer>\n                        {getPoster(movie.poster_path,movie.title)}\n                    </MoviePosterContainer>\n\n                    <MovieDetailsContainer>\n                        <MovieTitle>{movie.title}</MovieTitle>\n                        <MovieSubtitle>{movie.tagline}</MovieSubtitle>\n                        <AdditionalInfo>{hoursConvert(movie.runtime)} / {splitDate(movie.release_date)}</AdditionalInfo>\n                        <Overview>\n                            <h3>Overview</h3><p>{movie.overview}</p>\n                        </Overview>\n                        <AdditionalInfo>{profit(movie.budget, movie.revenue)}</AdditionalInfo>\n                        <GenreWrapper>{displayGenres(movie.genres)}</GenreWrapper>\n                        { movie.homepage ? <Button href={movie.homepage} target=\"_blank\" rel=\"noopener noreferrer\">View Site</Button> : ( \"\" )}\n                        { movie.imdb_id ? <Button href={`https://www.imdb.com/title/${movie.imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\">View IMDB</Button> : (\"\") }\n                    </MovieDetailsContainer>\n\n                </Container>\n\n            </MovieWrapper>\n            \n        )\n    }\n}\n\n\n\nexport default Movie\n\n\n// show back button if user was pushed into page\nfunction renderBack() {\n    if (history.action === 'PUSH') {\n      return (\n        <div id=\"back\" onClick={history.goBack}>\n          <div title=\"Back\"><img alt=\"Return to previous page\" src={LeftSVG} /></div>\n        </div>\n      );\n    }\n}\n\n// get the Poster\nfunction getPoster(poster_path, title) {\n    if(poster_path) {\n        return (\n            <img alt={`Poster for ${title}`} src={`https://image.tmdb.org/t/p/w780/${poster_path}`}/>\n        )\n    } else {\n        return (\n            <img alt={`Missing Poster for ${title}`} src={Placeholder} />\n        )\n    }\n}\n\n// Run through the genres\nfunction displayGenres(genres) {\n    if(genres) {\n        return genres.map(movie => (\n            <div className=\"item\" key={movie.id}>{movie.name}</div>\n        ))\n    }  \n}\n\n// Split the date into \"Month Year\"\nfunction splitDate(fullDate) {\n    if(fullDate) {\n        const [yearNum, monthNum, dayNum] = fullDate.split(\"-\")\n        let FullDate = new Date(yearNum, monthNum - 1, dayNum)\n        var months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n        let monthNumber = FullDate.getMonth();\n        return `${months[monthNumber]} ${yearNum}`\n    }  \n}\n\n// Turn minutes into Hours/Mins\nfunction hoursConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    if (rhours) {\n        return `${rhours}h ${rminutes}m`;\n    } else {\n        return `${rminutes}m`;\n    }\n}\n    \n// If movie made profit, add a class\nfunction profit(budget,revenue) {\n    const budgetCSV = parseInt( budget ).toLocaleString()\n    const revenueCSV = parseInt( revenue ).toLocaleString()\n    if (revenue < budget) {\n        return (\n        <div>\n            <h4 className=\"budget\">Budget: ${budgetCSV}</h4>\n            <h4 className=\"revenue loss\">Total Revenue: <span>${revenueCSV}</span></h4>\n        </div>\n        )\n    } else if (revenue === 0||budget ===0)  {\n        return \"\"\n    } else {\n        return (\n        <div>\n            <h4 className=\"budget\">Budget: ${budgetCSV}</h4>\n            <h4 className=\"revenue profit\">Total Revenue: <span>${revenueCSV}</span></h4>\n        </div>\n        )\n    }\n}\n\n// function showButtons(homepage,imdb_id) {\n//     if (homepage && imdb_id) {\n//         return (\n//             <Button href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">View Site</Button>\n//             <Button href={`https://www.imdb.com/title/${imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\">View IMDB</Button>\n//         )\n//     } \n// }","import React from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport Placeholder from '../assets/svg/placeholder.jpg';\n\nconst MovieTile = (props) => {\n    \n    const movieData = props.data;\n\n    return (\n        <div id=\"movieTile\">\n            <Link to={{ pathname: `/movie/${movieData.id}` }}>\n               {getPoster(movieData.poster_path,movieData.title)}\n                <div className=\"content\">\n                    <h2>{movieData.title}</h2>\n                </div>\n            </Link>\n        </div>\n    );\n\n}\n  \nexport default MovieTile;\n\n\n// get the Poster\nfunction getPoster(poster_path, title) {\n    if(poster_path) {\n        return (\n            \n            <img alt={`Poster for ${title}`} src={`https://image.tmdb.org/t/p/w780/${poster_path}`}/>\n        )\n    } else {\n        return (\n             <img alt={`Missing Poster for ${title}`} src={Placeholder} />\n        )\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport LeftSVG from '../assets/svg/left.svg';\nimport RightSVG from '../assets/svg/right.svg';\n\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n// background-color: #1b1b1b;\n// color: #fff;\nborder-radius: 100px;\npadding: 4px;\nfont-size: 0.8rem;\npadding: 5px 10px;\ntext-decoration: none;\nborder: 1px solid #1b1b1b;\ncolor: #1b1b1b;\ntransition:.4s ease;\nbackground-color:transparent;\ncursor:pointer;\nmin-width: 110px;\n\nimg, span {\n    vertical-align: middle;\n}\n\n&:hover {\n    background-color: #efefef;\n    color: #1b1b1b;\n}\n`;\n\nconst PaginationWrapper = styled.div`\n\npadding: 1rem 0 3rem;\ndisplay: flex;\njustify-content: space-around;\n\n`;\n\nconst Pagination = ({ fullResult, scrollToMyRef }) => {\n\n    const { page, total_pages } = fullResult;\n  \n    if (total_pages === 1) {\n        return null;\n    }\n\n    // On first page, render page 2 button\n    if (page < total_pages && page === 1) {\n        return (\n        <PaginationWrapper>\n            <Link\n            to={`${process.env.PUBLIC_URL}?page=${page + 1}`}\n            onClick={() => scrollToMyRef()}\n            >\n                <Button className=\"next\" title={`Page ${page + 1}`} ><span>Next</span><img alt=\"Next page button\" src={RightSVG} /></Button>\n            </Link>\n        </PaginationWrapper>\n        );\n    }\n\n     // There is a next and a previous page, render accordingly\n    else if (page < total_pages) {\n        return (\n        <PaginationWrapper>\n            <Link\n            to={`${process.env.PUBLIC_URL}?page=${page - 1}`}\n            onClick={() => scrollToMyRef()}\n            >\n                <Button className=\"prev\" title={`Page ${page - 1}`} icon=\"arrow-left\"><img alt=\"Previous page button\" src={LeftSVG} /><span>Previous</span></Button> \n            </Link>\n            <Link\n            to={`${process.env.PUBLIC_URL}?page=${page + 1}`}\n            onClick={() => scrollToMyRef()}\n            >\n                <Button className=\"next\" title={`Page ${page + 1}`} icon=\"arrow-right\"><span>Next</span><img alt=\"Next page button\" src={RightSVG} /></Button>\n            </Link>\n        </PaginationWrapper>\n        );\n    }\n\n    // Otherwise on last page of results\n    else {\n        return (\n        <PaginationWrapper>\n            <Link\n            to={`${process.env.PUBLIC_URL}?page=${page - 1}`}\n            onClick={() => scrollToMyRef()}\n            >\n            <Button className=\"prev\" title={`Page ${page - 1}`} ><img alt=\"Previous page button\" src={LeftSVG} /><span>Previous</span></Button>\n            </Link>\n        </PaginationWrapper>\n        );\n    }\n}\n  \nexport default Pagination;","import React from 'react';\nimport MovieTile from './MovieTile'\nimport Pagination from './Pagination'\n\nconst MoviesList = (props) => {\n\n    const movieResults = props.movieResults.results;\n    const fullResult = props.movieResults;\n    const searchQuery = props.searchQuery;\n\n    const scrollToMyRef = () => {\n      window.scrollTo({\n        top: (0, Element.current.offsetTop),\n        behavior: 'smooth',\n      });\n    };\n\n    return (\n\n      <section key={searchQuery}>\n        <div id=\"wrapper\">\n        {movieResults ? (\n          movieResults.map(movie => (\n            <MovieTile key={movie.id} data={movie}/>\n          ))\n        ) : ( \"\" )}\n        </div>\n        <Pagination key={searchQuery} fullResult={fullResult} scrollToMyRef={scrollToMyRef}/>\n      </section>\n      \n\n    );\n    \n}\n  \nexport default MoviesList;","import React from 'react';\nimport { searchMovies } from '../actions/index';\nimport MoviesList from '../components/MoviesList';\n// import history from '../actions/history';\n\nclass Search extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            searchResults: [],\n            searchQuery: \"\"\n        }\n        this.searchMovies = searchMovies.bind(this);\n    }\n\n    componentDidMount = () => {\n\n        // const searchQuery = this.state.searchQuery\n\n        // const movieResults =  this.state.searchResults\n        // const query = this.props.match.params.query\n\n        // let search = window.location.search;\n        // let params = new URLSearchParams(search);\n        // let page = params.get('page');\n\n        // console.log(\"query = \" +query)\n\n        // this.searchMovies(query,page)\n\n        // const movieResults =  this.state.searchResults\n\n        // console.log(this)\n\n\n\n            const query = this.props.match.params.query\n\n            let search = window.location.search;\n            let params = new URLSearchParams(search);\n            let page = params.get('page');\n\n            this.setState({\n                searchQuery: query\n            })\n\n            this.searchMovies(query,page)\n        \n\n        // console.log(page)\n\n        \n    \n    }\n\n    // componentDidUpdate = (prevProps, prevState) => {\n\n        \n\n    //     // const query = this.props.match.params.query\n    //     // let search = window.location.search;\n    //     // let params = new URLSearchParams(search);\n    //     // let page = params.get('page');\n        \n    //     // this.searchMovies(query,page).then(searchMovies => {\n    //     //     // this.setState({ searchResults: searchMovies });\n    //     //     // console.log('resolved')\n    //     // });\n\n\n    //     Object.entries(this.props).forEach(([key, val]) =>\n    //       prevProps[key] !== val && console.log(`Prop '${key}' changed`)\n    //     );\n    //     Object.entries(this.state).forEach(([key, val]) =>\n    //       prevState[key] !== val && console.log(`State '${key}' changed`)\n    //     );\n\n    // }\n\n\n    render() {        \n\n        return (\n   \n            <MoviesList \n            key={this.state.searchQuery} \n            searchQuery={this.state.searchQuery} \n            movieResults={this.state.searchResults} \n            />\n            \n        )\n    }\n}\n\nexport default Search","import React from 'react';\nimport { discoverMovies } from '../actions/index';\nimport MoviesList from '../components/MoviesList';\n\nclass Discover extends React.Component {\n\n    constructor(){\n        super();\n        this.state = {\n            searchResults: []\n        }\n        this.discoverMovies = discoverMovies.bind(this);\n        \n    }\n\n    componentDidMount = () => {\n\n        const query = this.props.match.params.query\n\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        let page = params.get('page');\n\n        // Do the search function\n        this.discoverMovies(query,page)\n    }\n\n    render() {\n\n        const movieResults =  this.state.searchResults\n\n        return (\n   \n            <MoviesList movieResults={movieResults} />\n        )\n    }\n}\n\nexport default Discover","import React from 'react';\nimport './App.scss';\nimport history from '../actions/history';\n\nimport { Router, Switch, Route, Redirect } from \"react-router-dom\"\n\nimport SiteHeader from '../components/SiteHeader'\nimport Footer from '../components/Footer'\n\nimport Movie from './Movie'\nimport Search from './Search'\nimport Discover from './Discover'\n\n\nconst App = () => {\n\n    return (\n\n      <Router history={history}>\n      <div id=\"app\">\n\n        <SiteHeader />\n\n        <div id=\"page\">\n\n          <section id=\"main-content\">\n            \n                <Switch>\n                    <Route\n                      path={process.env.PUBLIC_URL + '/'}\n                      exact\n                      render={() => (\n                        <Redirect\n                          from={process.env.PUBLIC_URL + '/'}\n                          to={process.env.PUBLIC_URL + '/discover/'}\n                        />\n                      )}\n                    />\n                    <Route path={process.env.PUBLIC_URL + '/search/:query'} exact component={Search} />\n                    <Route path={process.env.PUBLIC_URL + '/movie/:id'} exact component={Movie} />\n                    <Route path={process.env.PUBLIC_URL + '/discover/'} component={Discover} />\n                </Switch>\n            \n          </section>\n\n        </div>\n\n        <Footer />\n\n      </div>\n      </Router>\n\n    );\n  \n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}